{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\sophi\\\\Documents\\\\weather-checker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\sophi\\\\Documents\\\\weather-checker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"C:\\\\Users\\\\sophi\\\\Documents\\\\weather-checker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"C:\\\\Users\\\\sophi\\\\Documents\\\\weather-checker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import styles from\"./CardList.module.scss\";import Card from\"./Card\";var CardList=/*#__PURE__*/function(_Component){_inherits(CardList,_Component);var _super=_createSuper(CardList);function CardList(){var _this;_classCallCheck(this,CardList);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={cityName:[{city_id:2643744,image:require(\"../../static/images/london.png\")},{city_id:2988507,image:require(\"../../static/images/london.png\")},{city_id:5128581,image:require(\"../../static/images/london.png\")},{city_id:2147714,image:require(\"../../static/images/london.png\")},{city_id:2950159,image:require(\"../../static/images/london.png\")},{city_id:3117735,image:require(\"../../static/images/london.png\")}],filteredCities:[]};return _this;}_createClass(CardList,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var string=\"\";this.state.cityName.forEach(function(city){return string+=\"\".concat(city.city_id,\",\");});fetch(\"https://api.openweathermap.org/data/2.5/group?id=\".concat(string,\"&units=metric&appid=0f33f5c78acf44e7d38b5f6706f6f59d\")).then(function(response){return response.json();}).then(function(cities){_this2.setState({filteredCities:cities['list']});});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"section\",{className:styles.CardList},this.state.filteredCities.map(function(city,index){return/*#__PURE__*/React.createElement(Card,{city:city,key:index});}));}}]);return CardList;}(Component);export{CardList as default};","map":{"version":3,"sources":["C:/Users/sophi/Documents/weather-checker/src/components/CardList/CardList.jsx"],"names":["React","Component","styles","Card","CardList","state","cityName","city_id","image","require","filteredCities","string","forEach","city","fetch","then","response","json","cities","setState","map","index"],"mappings":"wfAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,GAEqBC,CAAAA,Q,mUACrBC,K,CAAQ,CACJC,QAAQ,CAAE,CACN,CAAEC,OAAO,CAAE,OAAX,CAAoBC,KAAK,CAAEC,OAAO,CAAC,gCAAD,CAAlC,CADM,CAEN,CAAEF,OAAO,CAAE,OAAX,CAAoBC,KAAK,CAAEC,OAAO,CAAC,gCAAD,CAAlC,CAFM,CAGN,CAAEF,OAAO,CAAE,OAAX,CAAoBC,KAAK,CAAEC,OAAO,CAAC,gCAAD,CAAlC,CAHM,CAIN,CAAEF,OAAO,CAAE,OAAX,CAAoBC,KAAK,CAAEC,OAAO,CAAC,gCAAD,CAAlC,CAJM,CAKN,CAAEF,OAAO,CAAE,OAAX,CAAoBC,KAAK,CAAEC,OAAO,CAAC,gCAAD,CAAlC,CALM,CAMN,CAAEF,OAAO,CAAE,OAAX,CAAoBC,KAAK,CAAEC,OAAO,CAAC,gCAAD,CAAlC,CANM,CADN,CASJC,cAAc,CAAE,EATZ,C,iGAYY,iBAChB,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,KAAKN,KAAL,CAAWC,QAAX,CAAoBM,OAApB,CAA4B,SAAAC,IAAI,QAAIF,CAAAA,MAAM,YAAOE,IAAI,CAACN,OAAZ,KAAV,EAAhC,EACAO,KAAK,4DAAqDH,MAArD,yDAAL,CACKI,IADL,CACU,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADlB,EAEKF,IAFL,CAEU,SAAAG,MAAM,CAAI,CACZ,MAAI,CAACC,QAAL,CAAc,CAAET,cAAc,CAAEQ,MAAM,CAAC,MAAD,CAAxB,CAAd,EACH,CAJL,EAKH,C,uCAEY,CACL,mBACI,+BAAS,SAAS,CAAEhB,MAAM,CAACE,QAA3B,EACK,KAAKC,KAAL,CAAWK,cAAX,CAA0BU,GAA1B,CAA8B,SAACP,IAAD,CAAOQ,KAAP,qBAC3B,oBAAC,IAAD,EAAM,IAAI,CAAER,IAAZ,CAAkB,GAAG,CAAEQ,KAAvB,EAD2B,EAA9B,CADL,CADJ,CAQH,C,sBAhCiCpB,S,SAAjBG,Q","sourcesContent":["import React, { Component } from \"react\";\r\nimport styles from \"./CardList.module.scss\";\r\nimport Card from \"./Card\";\r\n\r\nexport default class CardList extends Component {\r\nstate = {\r\n    cityName: [\r\n        { city_id: 2643744, image: require(\"../../static/images/london.png\") },\r\n        { city_id: 2988507, image: require(\"../../static/images/london.png\") },\r\n        { city_id: 5128581, image: require(\"../../static/images/london.png\") },\r\n        { city_id: 2147714, image: require(\"../../static/images/london.png\") },\r\n        { city_id: 2950159, image: require(\"../../static/images/london.png\") },\r\n        { city_id: 3117735, image: require(\"../../static/images/london.png\") }\r\n    ],\r\n    filteredCities: []\r\n}\r\n\r\ncomponentDidMount() {\r\n    let string = \"\";\r\n    this.state.cityName.forEach(city => string += `${city.city_id},`)\r\n    fetch(`https://api.openweathermap.org/data/2.5/group?id=${string}&units=metric&appid=0f33f5c78acf44e7d38b5f6706f6f59d`)\r\n        .then(response => response.json())\r\n        .then(cities => {\r\n            this.setState({ filteredCities: cities['list'] });\r\n        })\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <section className={styles.CardList}>\r\n                {this.state.filteredCities.map((city, index) => (\r\n                    <Card city={city} key={index}/>  \r\n                ))}\r\n            \r\n            </section>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}