{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sophi\\\\Documents\\\\weather-checker\\\\src\\\\components\\\\CardList\\\\CardList.jsx\";\nimport React, { Component } from \"react\";\nimport styles from \"./CardList.module.scss\";\nimport Card from \"./Card\";\nexport default class CardList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cityName: [{\n        city_id: 2643744,\n        image: require(\"../../static/images/london.png\")\n      }, {\n        city_id: 2988507,\n        image: require(\"../../static/images/london.png\")\n      }, {\n        city_id: 5128581,\n        image: require(\"../../static/images/london.png\")\n      }, {\n        city_id: 2147714,\n        image: require(\"../../static/images/london.png\")\n      }, {\n        city_id: 2950159,\n        image: require(\"../../static/images/london.png\")\n      }, {\n        city_id: 3117735,\n        image: require(\"../../static/images/london.png\")\n      }],\n      filteredCities: []\n    };\n  }\n\n  componentDidMount() {\n    let string = \"\";\n    this.state.cityName.forEach(city => string += `${city.city_id},`);\n    fetch(`https://api.openweathermap.org/data/2.5/group?id=${string}&units=metric&appid=0f33f5c78acf44e7d38b5f6706f6f59d`).then(response => response.json()).then(cities => {\n      this.setState({\n        filteredCities: cities['list']\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: styles.CardList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, this.state.filteredCities.map((city, index) => /*#__PURE__*/React.createElement(Card, {\n      city: city,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/sophi/Documents/weather-checker/src/components/CardList/CardList.jsx"],"names":["React","Component","styles","Card","CardList","state","cityName","city_id","image","require","filteredCities","componentDidMount","string","forEach","city","fetch","then","response","json","cities","setState","render","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAChDI,KADgD,GACxC;AACJC,MAAAA,QAAQ,EAAE,CACN;AAAEC,QAAAA,OAAO,EAAE,OAAX;AAAoBC,QAAAA,KAAK,EAAEC,OAAO,CAAC,gCAAD;AAAlC,OADM,EAEN;AAAEF,QAAAA,OAAO,EAAE,OAAX;AAAoBC,QAAAA,KAAK,EAAEC,OAAO,CAAC,gCAAD;AAAlC,OAFM,EAGN;AAAEF,QAAAA,OAAO,EAAE,OAAX;AAAoBC,QAAAA,KAAK,EAAEC,OAAO,CAAC,gCAAD;AAAlC,OAHM,EAIN;AAAEF,QAAAA,OAAO,EAAE,OAAX;AAAoBC,QAAAA,KAAK,EAAEC,OAAO,CAAC,gCAAD;AAAlC,OAJM,EAKN;AAAEF,QAAAA,OAAO,EAAE,OAAX;AAAoBC,QAAAA,KAAK,EAAEC,OAAO,CAAC,gCAAD;AAAlC,OALM,EAMN;AAAEF,QAAAA,OAAO,EAAE,OAAX;AAAoBC,QAAAA,KAAK,EAAEC,OAAO,CAAC,gCAAD;AAAlC,OANM,CADN;AASJC,MAAAA,cAAc,EAAE;AATZ,KADwC;AAAA;;AAahDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,EAAb;AACA,SAAKP,KAAL,CAAWC,QAAX,CAAoBO,OAApB,CAA4BC,IAAI,IAAIF,MAAM,IAAK,GAAEE,IAAI,CAACP,OAAQ,GAA9D;AACAQ,IAAAA,KAAK,CAAE,oDAAmDH,MAAO,sDAA5D,CAAL,CACKI,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,MAAM,IAAI;AACZ,WAAKC,QAAL,CAAc;AAAEV,QAAAA,cAAc,EAAES,MAAM,CAAC,MAAD;AAAxB,OAAd;AACH,KAJL;AAKH;;AAEGE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAS,MAAA,SAAS,EAAEnB,MAAM,CAACE,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,KAAL,CAAWK,cAAX,CAA0BY,GAA1B,CAA8B,CAACR,IAAD,EAAOS,KAAP,kBAC3B,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAET,IAAZ;AAAkB,MAAA,GAAG,EAAES,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CADJ;AAQH;;AAhC2C","sourcesContent":["import React, { Component } from \"react\";\r\nimport styles from \"./CardList.module.scss\";\r\nimport Card from \"./Card\";\r\n\r\nexport default class CardList extends Component {\r\nstate = {\r\n    cityName: [\r\n        { city_id: 2643744, image: require(\"../../static/images/london.png\") },\r\n        { city_id: 2988507, image: require(\"../../static/images/london.png\") },\r\n        { city_id: 5128581, image: require(\"../../static/images/london.png\") },\r\n        { city_id: 2147714, image: require(\"../../static/images/london.png\") },\r\n        { city_id: 2950159, image: require(\"../../static/images/london.png\") },\r\n        { city_id: 3117735, image: require(\"../../static/images/london.png\") }\r\n    ],\r\n    filteredCities: []\r\n}\r\n\r\ncomponentDidMount() {\r\n    let string = \"\";\r\n    this.state.cityName.forEach(city => string += `${city.city_id},`)\r\n    fetch(`https://api.openweathermap.org/data/2.5/group?id=${string}&units=metric&appid=0f33f5c78acf44e7d38b5f6706f6f59d`)\r\n        .then(response => response.json())\r\n        .then(cities => {\r\n            this.setState({ filteredCities: cities['list'] });\r\n        })\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <section className={styles.CardList}>\r\n                {this.state.filteredCities.map((city, index) => (\r\n                    <Card city={city} key={index}/>  \r\n                ))}\r\n            \r\n            </section>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}